from django.db import models

from transaction.models import Transaction

# from beam.btc_payment.models import coinbase


class GoCoinInvoice(models.Model):

    transaction = models.OneToOneField(
        Transaction,
        related_name='gocoin_voice',
        help_text='Transaction associated with this payment'
    )

    invoice_id = models.CharField(
        'Invoice ID',
        max_length=36,
        help_text='UUID identifying generated invoice'
    )

    btc_address = models.CharField(
        'BTC Wallet Address',
        max_length=34,
        help_text='Wallet generated to receive this payment'
    )


# class Coinbase_Payment(models.Model):

#     transaction = models.OneToOneField(
#         Transaction,
#         related_name='coinbase_payment',
#         help_text='Transaction associated with this payment'
#     )

#     coinbase_button_code = models.CharField(
#         'Coinbase Button Code',
#         blank=True,
#         max_length=50,
#         help_text='Represents button generated by Coinbase to receive payment.'
#     )

#     coinbase_order_reference = models.CharField(
#         'Coinbase Order Reference',
#         blank=True,
#         max_length=10,
#         help_text='Reference Code used to indentify Coinbase Order related to this transaction. Stored for tracking purposes.'
#     )

#     def generate_coinbase_button(self):
#         self.coinbase_button_code = coinbase.generate_button(
#             price=self.amount_gbp,
#             reference_number=self.reference_number,
#             transaction_id=self.id
#         )
#         self.save()
